; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = debug

[env]
board = esp32-c3-devkitm-1
framework = arduino
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip

board_build.arduino.upstream_packages = yes
board_build.filesystem = littlefs

; --- static code analysis settings ---
check_tool = cppcheck
check_skip_packages = true

lib_deps =
    arduino-libraries/ArduinoBLE @ ^1.3.7
    https://github.com/MomePP/GDXLib#bugfix/fix-compile-werror

; --- copy compiled firmware to dist folder ---
extra_scripts = 
    pre:./platformio-scripts/compilation-db.py
    post:./platformio-scripts/combine-firmware.py
; --- upload via custom GoGoBoard HID ---
    ; ./firmware-update-script/custom-uploader.py
; upload_protocol = custom

; --- upload via Serial port ---
upload_protocol = esptool
; upload_port = COM3
; upload_port = /dev/tty.usbserial-0001
upload_speed = 921600

; monitor_port = COM5
; monitor_port = /dev/tty.usbserial-5
monitor_speed = 921600
; monitor_speed = 115200
monitor_filters =
    send_on_enter
    ; time

; debug_tool = esp-builtin
; debug_init_break = break setup

build_unflags =
    ; -D CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL
    -std=gnu++11

build_flags =
; NOTE: --- board versioning ---
    -D FIRMWARE_MAJOR_VERSION=0
    -D FIRMWARE_MINOR_VERSION=1
    -D FIRMWARE_PATCH_VERSION=0

; NOTE: --- board configuration ---
    -D ARDUINO_USB_MODE=1
    -D ARDUINO_USB_CDC_ON_BOOT=1
    ; -D CONFIG_TINYUSB_HID_ENABLED=1

; INFO: --- overrided psram config ---
    ; -D CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL=2048
    ; -D CONFIG_ARDUINO_ISR_IRAM=1

; NOTE: --- generate memory footprint file ---
    ; -Wl,-Map,${BUILD_DIR}/output.map
    ; -Wall -Wextra
    ; -std=c++17
    -std=gnu++17

[env:release]
build_type = release
build_flags =
    ${env.build_flags}
    -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_NONE


[env:check_medium_or_high_defects]
check_severity = medium, high


[env:debug]
build_type = debug
build_flags =
    ${env.build_flags}
    -D FIRMWARE_BETA_VERSION=1
    -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
    -D LOG_LOCAL_LEVEL=ESP_LOG_DEBUG
    ; -D ENABLE_I2C_DEBUG_BUFFER
    -D CONFIG_ARDUHAL_LOG_COLORS
    -D CONFIG_LOG_COLORS

monitor_filters =
    ${env.monitor_filters}
    esp32_exception_decoder
    ; colorize
